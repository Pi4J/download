# Update the dynamic README in the repository root

name: pi4j-dynamic-readme

on:
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Adjust file modification times based on Git commits
        run: >-
          git ls-tree -r --name-only HEAD | while read file; do
            unix_ts="$(git log -1 --format="%at" -- "${file}")"
            touch_ts=$(date -d "@${unix_ts}" +"%Y%m%d%H%M.%S")
            touch -t "${touch_ts}" "${file}"
          done

      - name: Generate JSON file listing of download repository
        run: >-
          jq
          --null-input
          --compact-output
          --rawfile files <(TZ=UTC find . -maxdepth 1 -type f -printf "%f|%s|%TY-%Tm-%Td %TH:%TM\0" | sort -zr)
          '
              ($files | split("\u0000") | map(select(.!=""))) as $files
              | ($files | map(split("|") | {name: .[0], size: .[1]|tonumber, date: .[2]})) as $files
              | ($files | map(select(.name | test("\\.zip$")))) as $archives
              | {
                  snapshot_archives: $archives | map(select(.name | contains("SNAPSHOT"))),
                  release_archives: $archives | map(select(.name | contains("SNAPSHOT") | not)),
              }
          ' >> /tmp/drm-pi4j-download.json

      - name: Fetch JSON file listing of OS images mirror
        run: >-
          curl
          --silent --show-error --fail --fail
          --connect-timeout 10 --max-time 15 --retry 3 --retry-delay 0
          --output /tmp/drm-pi4j-os.json
          https://pi4j-download.com/versions.php?type=application/json

      - name: Output collected JSON files
        run: >-
          jq
          -s '{"pi4j-download": .[0], "pi4j-os": .[1]}'
          /tmp/drm-pi4j-download.json
          /tmp/drm-pi4j-os.json

      - name: Render dynamic README using gomplate
        uses: docker://hairyhenderson/gomplate:slim
        with:
          args: >-
            --context "pi4j_download=file:///tmp/drm-pi4j-download.json"
            --context "pi4j_os=file:///tmp/drm-pi4j-os.json"
            --file "/github/workspace/README.md.gtpl"
            --out "/github/workspace/README.md"

      - name: Commit modified README and push to repository
        run: |
          git config --global user.email "bot@pi4j.com"
          git config --global user.name "Pi4J Bot"
          git status
          git add README.md
          git commit -am "[AUTO] rebuild dynamic readme" || true
          git push
